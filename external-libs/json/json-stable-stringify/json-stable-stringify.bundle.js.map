{
  "version": 3,
  "sources": ["json-stable-stringify.js"],
  "sourcesContent": ["//var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nJSON.stableStringify = function (obj, opts) {\n    var json = JSON\n    \n    var isArray = Array.isArray || function (x) {\n        return {}.toString.call(x) === '[object Array]';\n    };\n    \n    var objectKeys = Object.keys || function (obj) {\n        var has = Object.prototype.hasOwnProperty || function () { return true };\n        var keys = [];\n        for (var key in obj) {\n            if (has.call(obj, key)) keys.push(key);\n        }\n        return keys;\n    };\n\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nJSON.stableStringifyEfficient = function (obj, opts) {\n    var json = JSON;\n    \n    var isArray = Array.isArray || function (x) {\n        return {}.toString.call(x) === '[object Array]';\n    };\n    \n    var objectKeys = Object.keys || function (obj) {\n        var has = Object.prototype.hasOwnProperty || function () { return true };\n        var keys = [];\n        for (var key in obj) {\n            if (has.call(obj, key)) keys.push(key);\n        }\n        return keys;\n    };\n\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = new Map();\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            const seenCount = seen.get(node) || 0;\n            if (seenCount > 0) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            seen.set(node, seenCount + 1);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                out.push(indent + space + keyValue);\n            }\n            seen.set(node, seen.get(node) - 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};"],
  "mappings": "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",
  "names": ["obj"]
}
